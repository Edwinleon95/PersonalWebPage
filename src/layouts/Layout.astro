---
import "@fontsource-variable/onest";

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
	title: string;
	description: string;
}

const { description, title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/coding.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="relative text-black dark:text-white">
		<div
			class="absolute top-0 bottom-0 z-[-2] min-h-screen w-full bg-gray-50 dark:bg-[#121212]"
		>
		</div>
		<Header />
		<slot />
		<Footer />
		<style is:global>
			:root {
				color-scheme: light dark;
			}

			html {
				font-family: "Onest Variable", system-ui, sans-serif;
				scroll-behavior: smooth;
			}

			body {
				color: rgba(17, 17, 17, 0.9);
				display: flex;
				flex-direction: column;
				min-height: 100vh;
				overscroll-behavior: none;
			}

			@media (prefers-reduced-motion: reduce) {
				html {
					scroll-behavior: auto;
				}
			}

			@media (prefers-color-scheme: dark) {
				body {
					color: rgba(255, 255, 255, 0.9);
				}
			}

			#header-nav {
				animation: blur linear both 0.5s;
				animation-timeline: scroll();
				animation-range: 0 500px;
			}

			@keyframes blur {
				to {
					backdrop-filter: blur(20px);
					border-width: 1px;
					border-color: rgba(0, 0, 0);
					padding: 0.25rem 0.75rem;
					display: flex;
					flex-direction: row;
					align-items: center;
					background-color: rgb(229, 229, 229);
					border-radius: 9999px;
				}
			}

			@media (prefers-color-scheme: dark) {
				@keyframes blur {
					from {
						border: 0px;
					}
					to {
						box-shadow:
							0px 5px 50px -5px rgba(0, 0, 0, 0.1),
							0px 0px 0 1px rgba(0, 0, 0, 0.3);
						background: rgba(0, 0, 0, 0.3);
						backdrop-filter: blur(20px);
						border-width: 1px;
						border-color: rgba(0, 0, 0);
						padding-left: 0.75rem;
						padding-right: 0.75rem;
						padding-top: 0.25rem;
						padding-bottom: 0.25rem;
						display: flex;
						flex-direction: row;
						align-items: center;
						background-color: rgba(0, 0, 0, 0.3);
						border-radius: 9999px;
					}
				}
			}

			.icon-container {
				position: relative;
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 8px;
				padding: 8px;
				border-radius: 8px;
				border: 2px solid transparent;
				transition: all 0.3s ease;

				&:hover {
					transform: scale(1.1);
					border: 2px solid var(--background-dif);
				}

				&:hover svg {
					filter: drop-shadow(0px 0px 25px var(--background-dif));
				}

				&:hover .tooltip {
					opacity: 1;
					transform: translateY(-45px);
				}

				.tooltip {
					position: absolute;
					text-wrap: nowrap;
					transform: translateY(-30px);
					opacity: 0;
					font-weight: 700;
					text-align: center;
					background-color: var(--background-dif);
					color: var(--background-color);
					border-radius: 4px;
					padding: 4px 8px;
					transition:
						opacity 0.3s ease,
						transform 0.3s ease;
				}
			}

			@keyframes mostrar {
				from {
					opacity: 0;
					scale: 50%;
				}

				to {
					opacity: 1;
					scale: 100%;
				}
			}

			@keyframes crecer {
				0% {
					scale: 100%;
				}

				20% {
					scale: 120%;
				}

				100% {
					scale: 100%;
				}
			}
		</style>
	</body>
</html>
